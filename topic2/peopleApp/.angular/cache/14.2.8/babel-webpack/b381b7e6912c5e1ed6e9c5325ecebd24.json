{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../people.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let PersonAddFormComponent = /*#__PURE__*/(() => {\n  class PersonAddFormComponent {\n    constructor(ps, router) {\n      this.ps = ps;\n      this.router = router;\n\n      this.instructorValidator = control => {\n        const name = control.get(\"name\");\n        const instructor = control.get(\"instructor\");\n        const valid_instr_names = ['bobby', 'john', 'sara'];\n        return valid_instr_names.includes(name.value) && instructor.value || !instructor.value ? null : {\n          form_error: true\n        };\n      };\n\n      let formControls = {\n        name: new FormControl('', [Validators.required, Validators.minLength(4), this.forbiddenNamesValidator]),\n        instructor: new FormControl(false)\n      };\n      this.form = new FormGroup(formControls, {\n        validators: [this.instructorValidator]\n      });\n    }\n\n    forbiddenNamesValidator(control) {\n      var bad_words = ['stupid', 'freaking', 'hell', 'idiot'];\n\n      if (bad_words.includes(control.value.trim())) {\n        return {\n          name_error: \"Your name connect be \" + control.value\n        }; // invalid\n      } else {\n        return null; // pass\n      }\n    }\n\n    ngOnInit() {}\n\n    onSubmit(values) {\n      console.log(values); // add this person!!\n\n      this.ps.add(values); // navigation back to root\n\n      this.router.navigate([\"/\"]);\n    }\n\n  }\n\n  PersonAddFormComponent.ɵfac = function PersonAddFormComponent_Factory(t) {\n    return new (t || PersonAddFormComponent)(i0.ɵɵdirectiveInject(i1.PeopleService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  PersonAddFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PersonAddFormComponent,\n    selectors: [[\"app-person-add-form\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"name\", \"name\", \"type\", \"text\", \"placeholder\", \"NAME\", \"formControlName\", \"name\"], [\"type\", \"checkbox\", \"formControlName\", \"instructor\"], [1, \"btn\", \"btn-outline-primary\", 3, \"disabled\"]],\n    template: function PersonAddFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function PersonAddFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit(ctx.form.value);\n        });\n        i0.ɵɵelementStart(1, \"fieldset\")(2, \"legend\");\n        i0.ɵɵtext(3, \"-----ADD PERSON-----\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 1)(5, \"br\");\n        i0.ɵɵtext(6, \" Instructor \");\n        i0.ɵɵelement(7, \"input\", 2)(8, \"br\");\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵtext(10, \"SAVE\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return PersonAddFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}